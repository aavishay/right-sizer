name: Publish Helm Chart

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  publish-helm-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0

      - name: Log in to Docker Hub for OCI
        uses: docker/login-action@v3
        with:
          registry: registry-1.docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to Helm registry
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | helm registry login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin registry-1.docker.io

      - name: Get chart version from VERSION file
        id: chart_version
        run: |
          # Read version from VERSION file
          if [ -f VERSION ]; then
            VERSION=$(cat VERSION)
            echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
            echo "Chart version from VERSION file: ${VERSION}"
          else
            echo "‚ùå VERSION file not found"
            exit 1
          fi

      - name: Update Chart versions
        run: |
          VERSION="${{ steps.chart_version.outputs.VERSION }}"

          # Update version in Chart.yaml to match VERSION file exactly
          sed -i "s/^version:.*/version: ${VERSION}/" helm/Chart.yaml

          # Update appVersion to match the version
          if [[ "${{ github.event_name }}" == "release" ]]; then
            APP_VERSION="${{ github.event.release.tag_name }}"
            APP_VERSION="${APP_VERSION#v}"  # Remove 'v' prefix if present
          else
            # Use the VERSION for appVersion to ensure consistency
            APP_VERSION="${VERSION}"
          fi
          sed -i "s/^appVersion:.*/appVersion: \"${APP_VERSION}\"/" helm/Chart.yaml

          echo "Updated Chart.yaml with version: ${VERSION} and appVersion: ${APP_VERSION}"
          echo "Chart.yaml content:"
          cat helm/Chart.yaml

      - name: Checkout gh-pages branch
        run: |
          # Check if gh-pages branch exists
          if git ls-remote --heads origin gh-pages | grep gh-pages; then
            echo "gh-pages branch exists, checking out..."
            git fetch origin gh-pages
            git worktree add gh-pages-branch gh-pages
          else
            echo "Creating new gh-pages branch..."
            git worktree add gh-pages-branch --detach
            cd gh-pages-branch
            git checkout --orphan gh-pages
            git rm -rf . 2>/dev/null || true
            cd ..
          fi

      - name: Package Helm chart
        run: |
          # Ensure charts directory exists in gh-pages
          mkdir -p gh-pages-branch/charts

          # Get version from Chart.yaml
          VERSION=$(grep '^version:' helm/Chart.yaml | awk '{print $2}')
          CHART_NAME="right-sizer"

          # Try to package the chart with helm, but use tar as fallback
          echo "Attempting to package Helm chart..."
          if helm package helm/ --destination gh-pages-branch/charts/ 2>/dev/null; then
            echo "‚úÖ Helm package succeeded"
            # Also package for OCI publishing
            helm package helm/ 2>/dev/null || true
          else
            echo "‚ö†Ô∏è Helm package failed, using tar as fallback..."
            # Package using tar as a workaround
            tar -czf "gh-pages-branch/charts/${CHART_NAME}-${VERSION}.tgz" -C . helm
            # Also create local package for OCI publishing
            tar -czf "${CHART_NAME}-${VERSION}.tgz" -C . helm
            echo "‚úÖ Created package using tar"
          fi

          echo "Packaged Helm chart:"
          ls -la gh-pages-branch/charts/
          echo "Local package for OCI:"
          ls -la right-sizer-*.tgz

      - name: Push Helm chart to OCI registry
        run: |
          VERSION="${{ steps.chart_version.outputs.VERSION }}"

          echo "üöÄ Publishing Helm chart to OCI registry..."
          echo "Chart version: $VERSION"

          # Find the packaged chart
          CHART_FILE=$(ls right-sizer-${VERSION}.tgz)

          if [[ -f "$CHART_FILE" ]]; then
            echo "Publishing $CHART_FILE to OCI registry..."

            # Push to Docker Hub OCI registry
            helm push "$CHART_FILE" oci://registry-1.docker.io/aavishay

            echo "‚úÖ Helm chart published to oci://registry-1.docker.io/aavishay/right-sizer:${VERSION}"
          else
            echo "‚ùå Chart file not found: right-sizer-${VERSION}.tgz"
            echo "Available files:"
            ls -la right-sizer-*.tgz || echo "No chart files found"
            exit 1
          fi

      - name: Create/Update Helm repository index
        run: |
          cd gh-pages-branch

          # Generate the Helm repository index
          helm repo index charts/ --url https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts

          # Create index.html for GitHub Pages
          cat > index.html <<EOF
          <!DOCTYPE html>
          <html>
          <head>
              <title>Right-Sizer Helm Chart Repository</title>
              <meta charset="utf-8">
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                      max-width: 900px;
                      margin: 0 auto;
                      padding: 2rem;
                      background-color: #f6f8fa;
                  }
                  .container {
                      background: white;
                      border-radius: 6px;
                      padding: 2rem;
                      box-shadow: 0 1px 3px rgba(0,0,0,0.12);
                  }
                  h1 { color: #24292e; border-bottom: 1px solid #e1e4e8; padding-bottom: 0.3em; }
                  h2 { color: #24292e; margin-top: 2rem; }
                  code {
                      background-color: #f3f4f6;
                      padding: 0.2em 0.4em;
                      border-radius: 3px;
                      font-size: 85%;
                  }
                  pre {
                      background-color: #f6f8fa;
                      padding: 16px;
                      border-radius: 6px;
                      overflow-x: auto;
                  }
                  .command {
                      background-color: #1b1f23;
                      color: #e1e4e8;
                      padding: 1rem;
                      border-radius: 6px;
                      margin: 1rem 0;
                  }
                  .command code {
                      background: none;
                      color: #79b8ff;
                      font-size: 14px;
                  }
                  a { color: #0366d6; text-decoration: none; }
                  a:hover { text-decoration: underline; }
                  .badge {
                      display: inline-block;
                      padding: 0.25em 0.6em;
                      font-size: 12px;
                      font-weight: 600;
                      line-height: 1;
                      color: #fff;
                      background-color: #28a745;
                      border-radius: 20px;
                      margin-left: 0.5rem;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üöÄ Right-Sizer Helm Chart Repository</h1>

                  <p>Welcome to the official Helm chart repository for <strong>Right-Sizer</strong> - a Kubernetes operator for automatic pod resource right-sizing.</p>

                  <h2>üì¶ Installation</h2>

                  <h3>1. Add the Helm repository</h3>
                  <div class="command">
                      <code>helm repo add right-sizer https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts</code>
                  </div>

                  <h3>2. Update your repositories</h3>
                  <div class="command">
                      <code>helm repo update</code>
                  </div>

                  <h3>3. Install the chart</h3>
                  <div class="command">
                      <code>helm install right-sizer right-sizer/right-sizer --namespace right-sizer --create-namespace</code>
                  </div>

                  <h2>üîç Search for available versions</h2>
                  <div class="command">
                      <code>helm search repo right-sizer --versions</code>
                  </div>

                  <h2>‚öôÔ∏è Configuration</h2>
                  <p>View all configurable options:</p>
                  <div class="command">
                      <code>helm show values right-sizer/right-sizer</code>
                  </div>

                  <p>Install with custom values:</p>
                  <div class="command">
                      <code>helm install right-sizer right-sizer/right-sizer -f values.yaml</code>
                  </div>

                  <h2>üìö Documentation</h2>
                  <ul>
                      <li><a href="https://github.com/${{ github.repository }}">GitHub Repository</a></li>
                      <li><a href="https://github.com/${{ github.repository }}/tree/main/helm">Helm Chart Source</a></li>
                      <li><a href="https://github.com/${{ github.repository }}/releases">Releases</a></li>
                      <li><a href="charts/index.yaml">Helm Repository Index</a></li>
                  </ul>

                  <h2>üè∑Ô∏è Latest Version</h2>
                  <p>Chart Version: <span class="badge">${{ steps.chart_version.outputs.VERSION }}</span></p>

                  <hr style="margin-top: 3rem; border: none; border-top: 1px solid #e1e4e8;">
                  <p style="text-align: center; color: #586069; font-size: 14px;">
                      Generated on $(date -u +"%Y-%m-%d %H:%M:%S UTC") |
                      <a href="https://github.com/${{ github.repository }}">View on GitHub</a>
                  </p>
              </div>
          </body>
          </html>
          EOF

          # Create a simple README for the gh-pages branch
          cat > README.md <<EOF
          # Right-Sizer Helm Chart Repository

          This branch hosts the Helm chart repository for Right-Sizer.

          ## Usage

          \`\`\`bash
          helm repo add right-sizer https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts
          helm repo update
          helm install right-sizer right-sizer/right-sizer
          \`\`\`

          ## Files

          - \`charts/\` - Contains packaged Helm charts
          - \`charts/index.yaml\` - Helm repository index
          - \`index.html\` - Repository landing page

          ---

          **Note:** This branch is automatically maintained by GitHub Actions. Do not edit directly.
          EOF

          echo "Repository index created:"
          cat charts/index.yaml

      - name: Commit and push to gh-pages
        run: |
          cd gh-pages-branch

          # Add all files
          git add .

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Commit changes
            COMMIT_MSG="Update Helm chart"
            if [[ "${{ github.event_name }}" == "release" ]]; then
              COMMIT_MSG="Publish Helm chart version ${{ steps.chart_version.outputs.VERSION }} from release ${{ github.event.release.tag_name }}"
            elif [[ "${{ github.event_name }}" == "push" ]]; then
              COMMIT_MSG="Update Helm chart version ${{ steps.chart_version.outputs.VERSION }} from main branch"
            else
              COMMIT_MSG="Update Helm chart version ${{ steps.chart_version.outputs.VERSION }} (manual trigger)"
            fi

            git commit -m "${COMMIT_MSG}"

            # Push to gh-pages branch
            git push origin gh-pages
          fi

          cd ..

      - name: Clean up worktree
        if: always()
        run: |
          git worktree remove gh-pages-branch --force || true

      - name: Enable GitHub Pages
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const { data: pages } = await github.rest.repos.getPages({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              console.log('GitHub Pages is already enabled');
            } catch (error) {
              if (error.status === 404) {
                console.log('Enabling GitHub Pages...');
                try {
                  await github.rest.repos.createPagesSite({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    source: {
                      branch: 'gh-pages',
                      path: '/'
                    }
                  });
                  console.log('GitHub Pages enabled successfully');
                } catch (createError) {
                  console.log('Could not automatically enable GitHub Pages:', createError.message);
                  console.log('Please enable it manually in repository settings');
                }
              } else {
                throw error;
              }
            }

      - name: Output summary
        run: |
          echo "## üìä Helm Chart Publishing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ Chart Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Version:** \`${{ steps.chart_version.outputs.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "- **Release:** ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üåê Repository URL" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "helm repo add right-sizer https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìù Installation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "helm repo update" >> $GITHUB_STEP_SUMMARY
          echo "helm install right-sizer right-sizer/right-sizer" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Helm Repository](https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts)" >> $GITHUB_STEP_SUMMARY
          echo "- [Repository Index](https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts/index.yaml)" >> $GITHUB_STEP_SUMMARY
          echo "- [OCI Registry](https://hub.docker.com/r/aavishay/right-sizer)" >> $GITHUB_STEP_SUMMARY
          echo "- [GitHub Pages Settings](https://github.com/${{ github.repository }}/settings/pages)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì¶ Installation Methods" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Traditional Helm Repository:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "helm repo add right-sizer https://${{ github.repository_owner }}.github.io/$(basename ${{ github.repository }})/charts" >> $GITHUB_STEP_SUMMARY
          echo "helm install right-sizer right-sizer/right-sizer" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**OCI Registry (Recommended):**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "helm install right-sizer oci://registry-1.docker.io/aavishay/right-sizer --version ${{ steps.chart_version.outputs.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
