repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
        exclude: helm/templates/.*\.yaml$
      - id: check-merge-conflict
      - id: check-added-large-files
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: [--fix=lf]

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [--config-file=.yamllint.yml]
        exclude: (helm/templates/.*\.yaml$|helm/crds/.*\.yaml$|tests/.*\.yaml$|k8s/.*\.yaml$|examples/.*\.yaml$|\.github/.*\.yaml$)

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning, --exclude=SC2145]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        exclude: go/go\.(mod|sum)$

  - repo: local
    hooks:
      - id: go-fmt
        name: Format Go code
        entry: bash -c "cd go && go fmt ./..."
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: go-vet
        name: Run go vet
        entry: bash -c "cd go && go vet ./..."
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: go-mod-tidy
        name: Tidy Go modules
        entry: bash -c "cd go && go mod tidy"
        language: system
        files: go/go\.mod$
        pass_filenames: false
      - id: golangci-lint
        name: Run golangci-lint
        entry: bash -c "cd go && $(go env GOPATH)/bin/golangci-lint run ./..."
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: go-test
        name: Run Go tests with race detection
        entry: bash -c "cd go && go test -race -v ./..."
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: go-test-coverage
        name: Run Go tests with coverage
        entry: ./scripts/check-coverage.sh
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: go-build
        name: Build Go binary
        entry: bash -c "cd go && go build ./..."
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: go-security-scan
        name: Run Go security scan
        entry: bash -c "cd go && $(go env GOPATH)/bin/govulncheck ./..."
        language: system
        files: go/go\.(mod|sum)$
        pass_filenames: false
      - id: helm-lint
        name: Lint Helm charts
        entry: bash -c "helm lint helm"
        language: system
        files: helm/.*$
        pass_filenames: false
      - id: check-go-mod
        name: Check Go module
        entry: bash -c "cd go && go mod verify"
        language: system
        files: go/go\.(mod|sum)$
        pass_filenames: false
      - id: go-integration-test
        name: Run Go integration tests
        entry: bash -c "cd go && go test -tags=integration ./..."
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: gosec
        name: Run gosec security scanner
        entry: bash -c "cd go && (command -v gosec >/dev/null 2>&1 && gosec -fmt json ./... || echo 'gosec not installed, skipping')"
        language: system
        files: go/.*\.go$
        pass_filenames: false
      - id: hadolint
        name: Lint Dockerfiles with Hadolint
        entry: bash -c "command -v docker >/dev/null 2>&1 && docker run --rm -v $(pwd):/workdir hadolint/hadolint \"$@\" || echo 'hadolint not available, skipping'"
        language: system
        files: Dockerfile.*$
        pass_filenames: true
