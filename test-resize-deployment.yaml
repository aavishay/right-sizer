apiVersion: v1
kind: Namespace
metadata:
  name: right-sizer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: right-sizer
  namespace: right-sizer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: right-sizer
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/status"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: [""]
    resources: ["pods/resize"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
    verbs: ["get", "list", "watch", "patch", "update"]
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list"]
  - apiGroups: ["rightsizer.io"]
    resources: ["rightsizerconfigs", "rightsizerpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: right-sizer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: right-sizer
subjects:
  - kind: ServiceAccount
    name: right-sizer
    namespace: right-sizer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: right-sizer
  namespace: right-sizer
  labels:
    app: right-sizer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: right-sizer
  template:
    metadata:
      labels:
        app: right-sizer
    spec:
      serviceAccountName: right-sizer
      containers:
      - name: right-sizer
        image: right-sizer:test-resize
        imagePullPolicy: Never
        env:
        - name: RESIZE_INTERVAL
          value: "30s"
        - name: DRY_RUN
          value: "false"
        - name: LOG_LEVEL
          value: "debug"
        - name: ENABLE_IN_PLACE_RESIZE
          value: "true"
        - name: NAMESPACE_INCLUDE
          value: "test-workloads"
        - name: PRESERVE_GUARANTEED_QOS
          value: "true"
        - name: MIN_CPU_REQUEST
          value: "10"
        - name: MIN_MEMORY_REQUEST
          value: "32"
        - name: CPU_REQUEST_MULTIPLIER
          value: "1.2"
        - name: MEMORY_REQUEST_MULTIPLIER
          value: "1.2"
        - name: CPU_SCALE_UP_THRESHOLD
          value: "0.8"
        - name: CPU_SCALE_DOWN_THRESHOLD
          value: "0.3"
        - name: MEMORY_SCALE_UP_THRESHOLD
          value: "0.8"
        - name: MEMORY_SCALE_DOWN_THRESHOLD
          value: "0.3"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        ports:
        - containerPort: 8080
          name: metrics
        - containerPort: 8081
          name: health
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: right-sizer
  namespace: right-sizer
spec:
  selector:
    app: right-sizer
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
  - name: health
    port: 8081
    targetPort: 8081
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-workloads
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-oversized
  namespace: test-workloads
  labels:
    app: test-app-oversized
    test: resize-policy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-oversized
  template:
    metadata:
      labels:
        app: test-app-oversized
        test: resize-policy
    spec:
      containers:
      - name: stress
        image: polinux/stress
        imagePullPolicy: IfNotPresent
        command: ["stress"]
        args: ["--cpu", "1", "--vm", "1", "--vm-bytes", "50M", "--vm-hang", "1"]
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1024Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-undersized
  namespace: test-workloads
  labels:
    app: test-app-undersized
    test: resize-policy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-undersized
  template:
    metadata:
      labels:
        app: test-app-undersized
        test: resize-policy
    spec:
      containers:
      - name: stress
        image: polinux/stress
        imagePullPolicy: IfNotPresent
        command: ["stress"]
        args: ["--cpu", "2", "--vm", "2", "--vm-bytes", "200M", "--vm-hang", "1"]
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-guaranteed
  namespace: test-workloads
  labels:
    app: test-app-guaranteed
    test: resize-policy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-guaranteed
  template:
    metadata:
      labels:
        app: test-app-guaranteed
        test: resize-policy
        qos-class: guaranteed
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 256Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: test-pod-with-resize-policy
  namespace: test-workloads
  labels:
    test: existing-resize-policy
spec:
  containers:
  - name: nginx
    image: nginx:alpine
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    resizePolicy:
    - resourceName: cpu
      restartPolicy: RestartContainer
    - resourceName: memory
      restartPolicy: RestartContainer
---
apiVersion: v1
kind: Pod
metadata:
  name: test-pod-without-resize-policy
  namespace: test-workloads
  labels:
    test: no-resize-policy
spec:
  containers:
  - name: nginx
    image: nginx:alpine
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 150m
        memory: 192Mi
      limits:
        cpu: 300m
        memory: 384Mi
