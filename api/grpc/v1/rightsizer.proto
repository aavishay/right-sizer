// Copyright (C) 2024 right-sizer contributors
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

syntax = "proto3";

package rightsizer.v1;

option go_package = "right-sizer/api/grpc/v1";

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// RightSizerService provides gRPC API for dashboard integration
service RightSizerService {
  // Cluster Information
  rpc GetClusterInfo(google.protobuf.Empty) returns (ClusterInfo);
  rpc GetClusterStatus(google.protobuf.Empty) returns (ClusterStatus);
  rpc GetClusterMetrics(MetricsRequest) returns (ClusterMetrics);

  // Event Streaming
  rpc StreamEvents(EventStreamRequest) returns (stream Event);
  rpc GetEvents(EventListRequest) returns (EventListResponse);

  // Resource Management
  rpc GetResources(ResourceListRequest) returns (ResourceListResponse);
  rpc GetResourceRecommendations(RecommendationRequest) returns (RecommendationResponse);

  // Remediation
  rpc ExecuteRemediation(RemediationRequest) returns (RemediationResponse);
  rpc GetRemediationStatus(RemediationStatusRequest) returns (RemediationStatusResponse);
  rpc ApproveRemediation(RemediationApprovalRequest) returns (RemediationApprovalResponse);

  // Health and Diagnostics
  rpc GetHealth(google.protobuf.Empty) returns (HealthResponse);
  rpc GetDiagnostics(google.protobuf.Empty) returns (DiagnosticsResponse);
}

// Cluster Information
message ClusterInfo {
  string cluster_id = 1;
  string cluster_name = 2;
  string kubernetes_version = 3;
  string operator_version = 4;
  repeated string supported_features = 5;
  google.protobuf.Timestamp last_seen = 6;
  map<string, string> metadata = 7;
}

message ClusterStatus {
  string status = 1; // healthy, warning, error, critical
  int32 total_nodes = 2;
  int32 ready_nodes = 3;
  int32 total_pods = 4;
  int32 managed_pods = 5;
  int32 active_policies = 6;
  ResourceUtilization utilization = 7;
  repeated ComponentStatus components = 8;
}

message ComponentStatus {
  string name = 1;
  string status = 2;
  string message = 3;
  google.protobuf.Timestamp last_check = 4;
}

message ResourceUtilization {
  double cpu_utilization = 1;
  double memory_utilization = 2;
  string cpu_capacity = 3;
  string memory_capacity = 4;
  string cpu_requests = 5;
  string memory_requests = 6;
}

// Metrics
message MetricsRequest {
  google.protobuf.Duration time_range = 1;
  repeated string metric_types = 2;
  repeated string namespaces = 3;
}

message ClusterMetrics {
  google.protobuf.Timestamp timestamp = 1;
  ResourceMetrics resources = 2;
  repeated PodMetrics pods = 3;
  repeated NodeMetrics nodes = 4;
  map<string, double> custom_metrics = 5;
}

message ResourceMetrics {
  double cpu_usage_percent = 1;
  double memory_usage_percent = 2;
  int32 total_pods = 3;
  int32 optimized_resources = 4;
  double network_usage_mbps = 5;
  double disk_io_mbps = 6;
}

message PodMetrics {
  string namespace = 1;
  string name = 2;
  string container = 3;
  string cpu_usage = 4;
  string memory_usage = 5;
  double cpu_utilization = 6;
  double memory_utilization = 7;
  google.protobuf.Timestamp timestamp = 8;
}

message NodeMetrics {
  string name = 1;
  string cpu_usage = 2;
  string memory_usage = 3;
  double cpu_utilization = 4;
  double memory_utilization = 5;
  string cpu_capacity = 6;
  string memory_capacity = 7;
  google.protobuf.Timestamp timestamp = 8;
}

// Events
message EventStreamRequest {
  EventFilter filter = 1;
  bool include_historical = 2;
}

message EventListRequest {
  EventFilter filter = 1;
  int32 limit = 2;
  string page_token = 3;
}

message EventListResponse {
  repeated Event events = 1;
  string next_page_token = 2;
  int32 total_count = 3;
}

message EventFilter {
  repeated string event_types = 1;
  repeated string namespaces = 2;
  repeated string resources = 3;
  repeated string severities = 4;
  repeated string tags = 5;
  google.protobuf.Timestamp since = 6;
  google.protobuf.Timestamp until = 7;
}

message Event {
  string id = 1;
  string type = 2;
  google.protobuf.Timestamp timestamp = 3;
  string cluster_id = 4;
  string namespace = 5;
  string resource = 6;
  string severity = 7;
  string message = 8;
  google.protobuf.Struct details = 9;
  repeated string tags = 10;
  string source = 11;
  string correlation_id = 12;
}

// Resources
message ResourceListRequest {
  repeated string namespaces = 1;
  repeated string resource_types = 2; // pods, deployments, nodes
  bool include_metrics = 3;
}

message ResourceListResponse {
  repeated Resource resources = 1;
  int32 total_count = 2;
}

message Resource {
  string kind = 1;
  string namespace = 2;
  string name = 3;
  google.protobuf.Struct spec = 4;
  google.protobuf.Struct status = 5;
  ResourceMetrics metrics = 6;
  repeated Recommendation recommendations = 7;
}

// Recommendations
message RecommendationRequest {
  string namespace = 1;
  string resource_name = 2;
  string resource_type = 3;
  string container = 4;
}

message RecommendationResponse {
  repeated Recommendation recommendations = 1;
}

message Recommendation {
  string id = 1;
  string type = 2; // resource, scaling, configuration
  string priority = 3; // low, medium, high, critical
  string reason = 4;
  double confidence = 5;
  google.protobuf.Struct current_config = 6;
  google.protobuf.Struct recommended_config = 7;
  EstimatedImpact impact = 8;
  google.protobuf.Timestamp created_at = 9;
}

message EstimatedImpact {
  double cost_savings = 1;
  double performance_improvement = 2;
  double risk_score = 3;
  string description = 4;
}

// Remediation
message RemediationRequest {
  string action_type = 1;
  ActionTarget target = 2;
  google.protobuf.Struct parameters = 3;
  string reason = 4;
  string source = 5;
  string priority = 6;
  bool require_approval = 7;
}

message ActionTarget {
  string namespace = 1;
  string name = 2;
  string kind = 3;
  string container = 4;
}

message RemediationResponse {
  string action_id = 1;
  string status = 2;
  string message = 3;
  bool requires_approval = 4;
}

message RemediationStatusRequest {
  string action_id = 1;
}

message RemediationStatusResponse {
  string action_id = 1;
  string status = 2;
  string message = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  ActionExecution execution = 6;
}

message ActionExecution {
  google.protobuf.Timestamp started_at = 1;
  google.protobuf.Timestamp completed_at = 2;
  google.protobuf.Duration duration = 3;
  string error = 4;
  google.protobuf.Struct result = 5;
  repeated ExecutionStep steps = 6;
}

message ExecutionStep {
  string name = 1;
  string status = 2;
  google.protobuf.Timestamp started_at = 3;
  google.protobuf.Timestamp completed_at = 4;
  string error = 5;
  google.protobuf.Struct details = 6;
}

message RemediationApprovalRequest {
  string action_id = 1;
  bool approved = 2;
  string approver = 3;
  string reason = 4;
}

message RemediationApprovalResponse {
  string action_id = 1;
  string status = 2;
  string message = 3;
}

// Health and Diagnostics
message HealthResponse {
  string status = 1; // healthy, degraded, unhealthy
  repeated ComponentStatus components = 2;
  google.protobuf.Timestamp timestamp = 3;
  map<string, string> metadata = 4;
}

message DiagnosticsResponse {
  string cluster_id = 1;
  SystemInfo system = 2;
  repeated string recent_errors = 3;
  map<string, int32> error_counts = 4;
  PerformanceStats performance = 5;
  google.protobuf.Timestamp timestamp = 6;
}

message SystemInfo {
  string go_version = 1;
  string kubernetes_version = 2;
  string operator_version = 3;
  int32 goroutines = 4;
  int64 memory_usage = 5;
  google.protobuf.Duration uptime = 6;
}

message PerformanceStats {
  int32 events_processed = 1;
  int32 actions_executed = 2;
  double avg_response_time = 3;
  int32 active_connections = 4;
  map<string, int32> operation_counts = 5;
}
