---
# Test namespace
apiVersion: v1
kind: Namespace
metadata:
  name: test-rightsizer
  labels:
    rightsizer: enabled

---
# Test deployment with intentionally oversized resources
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
  namespace: test-rightsizer
  labels:
    app: test-app
    environment: test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
        environment: test
      annotations:
        rightsizer.io/enabled: "true"
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: 500m # Oversized for nginx
              memory: 512Mi # Oversized for nginx
            limits:
              cpu: 1000m
              memory: 1Gi
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10

---
# Another test deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: busybox-app
  namespace: test-rightsizer
  labels:
    app: busybox-app
    environment: test
spec:
  replicas: 2
  selector:
    matchLabels:
      app: busybox-app
  template:
    metadata:
      labels:
        app: busybox-app
        environment: test
    spec:
      containers:
        - name: busybox
          image: busybox
          command: ["/bin/sh"]
          args: ["-c", "while true; do echo hello; sleep 10; done"]
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi

---
# RightSizerPolicy with correct schema
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: test-policy
  namespace: test-rightsizer
spec:
  enabled: true
  priority: 100
  mode: balanced
  dryRun: false

  targetRef:
    kind: Deployment
    apiVersion: apps/v1
    namespaces:
      - test-rightsizer
    labelSelector:
      matchLabels:
        environment: test

  resourceStrategy:
    cpu:
      requestMultiplier: 1.2
      limitMultiplier: 2.0
      minRequest: 10
      maxLimit: 2000
    memory:
      requestMultiplier: 1.3
      limitMultiplier: 1.8
      minRequest: 64
      maxLimit: 2048

  schedule:
    interval: "5m" # Every 5 minutes
    cronSchedule: "" # Or use cron format instead of interval

  constraints:
    maxChangePercentage: 50
    minChangeThreshold: 10
    cooldownPeriod: "5m"
    maxRestartsPerHour: 3
    respectPDB: true
    respectHPA: true
    respectVPA: true

  resourceAnnotations:
    "rightsizer.io/last-updated": "true"
    "rightsizer.io/policy": "test-policy"

---
# RightSizerConfig with correct schema
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerConfig
metadata:
  name: default-config
  namespace: test-rightsizer
spec:
  enabled: true

  namespaceConfig:
    includeNamespaces:
      - test-rightsizer
    excludeNamespaces:
      - kube-system
      - kube-public
      - kube-node-lease
    systemNamespaces:
      - kube-system
      - kube-public
      - kube-node-lease
      - right-sizer-system

---
# Service to expose test-app
apiVersion: v1
kind: Service
metadata:
  name: test-app-service
  namespace: test-rightsizer
spec:
  selector:
    app: test-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
# HPA to test conflict detection
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: test-app-hpa
  namespace: test-rightsizer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-app
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
