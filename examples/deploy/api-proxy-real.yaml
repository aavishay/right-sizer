apiVersion: v1
kind: ConfigMap
metadata:
  name: api-proxy-config
  namespace: right-sizer
data:
  default.conf: |
    upstream right-sizer-api {
        server right-sizer:8082;
    }

    upstream right-sizer-metrics {
        server right-sizer:9090;
    }

    upstream kubernetes-api {
        server kubernetes.default.svc.cluster.local:443;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 8082;
        server_name _;

        # Enable CORS for all origins (configure appropriately for production)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Real-time WebSocket endpoint for live updates
        location /ws {
            proxy_pass http://right-sizer-api/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket specific timeouts
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # API endpoints for real data
        location /api/ {
            proxy_pass http://right-sizer-api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";

            # Enable streaming responses
            proxy_buffering off;
            proxy_cache off;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Metrics endpoint (Prometheus format)
        location /metrics {
            proxy_pass http://right-sizer-metrics/metrics;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoints
        location /healthz {
            proxy_pass http://right-sizer-api/healthz;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /readyz {
            proxy_pass http://right-sizer-api/readyz;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Real-time optimization events endpoint
        location /events {
            proxy_pass http://right-sizer-api/events;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Enable SSE (Server-Sent Events)
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Connection "";
            chunked_transfer_encoding on;
        }

        # Optimization recommendations endpoint
        location /recommendations {
            proxy_pass http://right-sizer-api/recommendations;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Pod metrics endpoint
        location /pods {
            proxy_pass http://right-sizer-api/pods;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Namespace metrics endpoint
        location /namespaces {
            proxy_pass http://right-sizer-api/namespaces;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optimization history endpoint
        location /history {
            proxy_pass http://right-sizer-api/history;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Configuration endpoint
        location /config {
            proxy_pass http://right-sizer-api/config;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Statistics endpoint
        location /stats {
            proxy_pass http://right-sizer-api/stats;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default root endpoint
        location / {
            proxy_pass http://right-sizer-api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-proxy
  namespace: right-sizer
  labels:
    app: api-proxy
    component: proxy
    version: real-data
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-proxy
  template:
    metadata:
      labels:
        app: api-proxy
        component: proxy
        version: real-data
    spec:
      containers:
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 8082
          name: api
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        env:
        - name: NGINX_PORT
          value: "8082"
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8082
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8082
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: config
        configMap:
          name: api-proxy-config
          items:
          - key: default.conf
            path: default.conf

---
apiVersion: v1
kind: Service
metadata:
  name: api-proxy
  namespace: right-sizer
  labels:
    app: api-proxy
    component: proxy
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
    name: api
  selector:
    app: api-proxy
