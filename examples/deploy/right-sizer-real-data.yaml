apiVersion: v1
kind: ConfigMap
metadata:
  name: right-sizer-config
  namespace: right-sizer
data:
  config.yaml: |
    # Right Sizer Configuration for Real Data
    operator:
      # Enable real-time metrics collection
      enableMetricsCollection: true
      metricsSource: "metrics-server"

      # Scan interval for collecting metrics
      scanInterval: "30s"

      # History retention for optimization events
      eventRetentionDays: 30

      # Resource optimization settings
      optimization:
        # Use actual metrics instead of mock data
        useMockData: false

        # Minimum observation period before making recommendations
        observationPeriod: "5m"

        # Thresholds for optimization
        cpuUtilizationTarget: 70
        memoryUtilizationTarget: 80

        # Safety margins
        cpuSafetyMargin: 20
        memorySafetyMargin: 20

        # Minimum resources
        minCPU: "10m"
        minMemory: "64Mi"

        # Maximum resources per container
        maxCPU: "2000m"
        maxMemory: "4Gi"

      # Data collection settings
      dataCollection:
        # Enable persistent storage of metrics
        enablePersistence: true

        # Metrics aggregation interval
        aggregationInterval: "1m"

        # Store detailed metrics
        storeDetailedMetrics: true

        # Enable real-time event streaming
        enableEventStreaming: true

    # API Server configuration
    apiServer:
      # Enable real-time API
      enableRealTimeAPI: true

      # CORS settings for dashboard
      cors:
        enabled: true
        allowedOrigins:
          - "*"
        allowedMethods:
          - "GET"
          - "POST"
          - "PUT"
          - "DELETE"
          - "OPTIONS"
        allowedHeaders:
          - "*"

      # WebSocket support for real-time updates
      websocket:
        enabled: true
        pingInterval: "30s"

    # Metrics collection configuration
    metrics:
      # Sources to collect from
      sources:
        - type: "metrics-server"
          enabled: true
          interval: "30s"
        - type: "prometheus"
          enabled: false
          endpoint: "http://prometheus:9090"

      # Metrics to collect
      collectMetrics:
        - cpu_usage
        - memory_usage
        - cpu_request
        - memory_request
        - cpu_limit
        - memory_limit
        - restart_count
        - container_status

    # Event tracking configuration
    events:
      # Track all optimization events
      trackOptimizationEvents: true

      # Event types to track
      eventTypes:
        - "ResourceOptimized"
        - "ResourceResized"
        - "OptimizationSkipped"
        - "OptimizationFailed"
        - "PodEvicted"
        - "ConfigurationChanged"

      # Store events in-memory and expose via API
      storage:
        type: "memory"
        maxEvents: 10000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: right-sizer
  namespace: right-sizer
  labels:
    app: right-sizer
    app.kubernetes.io/name: right-sizer
    app.kubernetes.io/instance: right-sizer
    version: "real-data"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: right-sizer
      app.kubernetes.io/name: right-sizer
      app.kubernetes.io/instance: right-sizer
  template:
    metadata:
      labels:
        app: right-sizer
        app.kubernetes.io/name: right-sizer
        app.kubernetes.io/instance: right-sizer
        version: "real-data"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: right-sizer
      containers:
      - name: right-sizer
        image: right-sizer:latest
        imagePullPolicy: Never
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: api
          containerPort: 8082
          protocol: TCP
        env:
        # Core configuration
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

        # Logging configuration
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        - name: ENABLE_DEBUG_LOGS
          value: "false"

        # Metrics configuration
        - name: METRICS_PORT
          value: "9090"
        - name: ENABLE_METRICS
          value: "true"
        - name: METRICS_PATH
          value: "/metrics"

        # API configuration
        - name: API_PORT
          value: "8082"
        - name: ENABLE_API
          value: "true"
        - name: API_ENABLE_CORS
          value: "true"

        # Health check configuration
        - name: HEALTH_PORT
          value: "8081"

        # Operator configuration
        - name: ENABLE_LEADER_ELECTION
          value: "false"
        - name: RESYNC_PERIOD
          value: "30s"
        - name: SCAN_INTERVAL
          value: "30s"

        # Real data configuration - IMPORTANT
        - name: USE_MOCK_DATA
          value: "false"
        - name: ENABLE_REAL_METRICS
          value: "true"
        - name: METRICS_SOURCE
          value: "metrics-server"
        - name: COLLECT_REAL_EVENTS
          value: "true"
        - name: STORE_OPTIMIZATION_HISTORY
          value: "true"

        # Resource optimization settings
        - name: MIN_MEMORY
          value: "64Mi"
        - name: MIN_CPU
          value: "10m"
        - name: MAX_MEMORY
          value: "4Gi"
        - name: MAX_CPU
          value: "2000m"
        - name: MEMORY_BUFFER_PERCENTAGE
          value: "20"
        - name: CPU_BUFFER_PERCENTAGE
          value: "20"

        # Optimization behavior
        - name: ENABLE_AUTO_OPTIMIZATION
          value: "true"
        - name: OPTIMIZATION_MODE
          value: "recommend-and-apply"
        - name: OBSERVATION_PERIOD
          value: "5m"
        - name: OPTIMIZATION_THRESHOLD_CPU
          value: "70"
        - name: OPTIMIZATION_THRESHOLD_MEMORY
          value: "80"

        # Feature flags
        - name: ENABLE_IN_PLACE_UPDATES
          value: "true"
        - name: ENABLE_VPA_INTEGRATION
          value: "false"
        - name: ENABLE_HPA_AWARENESS
          value: "true"

        # Data persistence
        - name: ENABLE_PERSISTENT_STORAGE
          value: "false"
        - name: EVENT_RETENTION_DAYS
          value: "30"
        - name: MAX_EVENTS_IN_MEMORY
          value: "10000"

        volumeMounts:
        - name: config
          mountPath: /config
          readOnly: true

        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false  # Set to false for now to allow writing events
          runAsNonRoot: true
          runAsUser: 65532

      volumes:
      - name: config
        configMap:
          name: right-sizer-config

      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        fsGroup: 65532

---
apiVersion: v1
kind: Service
metadata:
  name: right-sizer-api
  namespace: right-sizer
  labels:
    app: right-sizer
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: api
    protocol: TCP
    name: api
  selector:
    app: right-sizer

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: optimization-events-realtime
  namespace: right-sizer
data:
  config.json: |
    {
      "enableRealTimeEvents": true,
      "eventSource": "right-sizer-api",
      "apiEndpoint": "http://right-sizer:8082",
      "refreshInterval": 5000,
      "maxEventsToDisplay": 100,
      "enableWebSocket": true,
      "wsEndpoint": "ws://right-sizer:8082/ws"
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: right-sizer-dashboard
  namespace: right-sizer
  labels:
    app: right-sizer-dashboard
    version: "real-data"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: right-sizer-dashboard
  template:
    metadata:
      labels:
        app: right-sizer-dashboard
        version: "real-data"
    spec:
      serviceAccountName: right-sizer-dashboard
      containers:
      - name: dashboard
        image: right-sizer-dashboard:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        env:
        # API Configuration for real data
        - name: REACT_APP_API_URL
          value: "http://right-sizer:8082"
        - name: REACT_APP_USE_REAL_DATA
          value: "true"
        - name: REACT_APP_USE_MOCK_DATA
          value: "false"

        # WebSocket for real-time updates
        - name: REACT_APP_WS_URL
          value: "ws://right-sizer:8082/ws"
        - name: REACT_APP_ENABLE_WEBSOCKET
          value: "true"

        # Kubernetes API access
        - name: REACT_APP_K8S_API_URL
          value: "https://kubernetes.default.svc.cluster.local:443"
        - name: NAMESPACE
          value: "right-sizer"

        # Dashboard configuration
        - name: REACT_APP_REFRESH_INTERVAL
          value: "5"
        - name: REACT_APP_DEFAULT_TIME_RANGE
          value: "1h"
        - name: REACT_APP_ENABLE_AUTO_REFRESH
          value: "true"
        - name: REACT_APP_SHOW_REAL_METRICS
          value: "true"
        - name: REACT_APP_SHOW_RECOMMENDATIONS
          value: "true"
        - name: REACT_APP_SHOW_OPTIMIZATION_HISTORY
          value: "true"

        # Feature flags
        - name: REACT_APP_ENABLE_DARK_MODE
          value: "true"
        - name: REACT_APP_ENABLE_EXPORT
          value: "true"
        - name: REACT_APP_ENABLE_NOTIFICATIONS
          value: "true"

        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi

        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10

        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
