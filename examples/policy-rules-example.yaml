# Right-Sizer Policy Rules Configuration using CRDs
# This file demonstrates the CRD-based policy configuration for the right-sizer operator

---
# CRD Definition for RightSizerPolicy
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rightsizerpolicies.rightsizer.io
spec:
  group: rightsizer.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                priority:
                  type: integer
                  minimum: 0
                  maximum: 1000
                  description: Priority of the policy (higher values take precedence)
                enabled:
                  type: boolean
                  default: true
                  description: Whether this policy is enabled
                description:
                  type: string
                  description: Human-readable description of the policy
                selectors:
                  type: object
                  description: Criteria for matching pods
                  properties:
                    namespaces:
                      type: array
                      items:
                        type: string
                      description: List of namespaces to match
                    excludeNamespaces:
                      type: array
                      items:
                        type: string
                      description: List of namespaces to exclude
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                      description: Label selector for pods
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                      description: Annotation selector for pods
                    workloadTypes:
                      type: array
                      items:
                        type: string
                        enum:
                          [
                            "Deployment",
                            "StatefulSet",
                            "DaemonSet",
                            "ReplicaSet",
                            "Job",
                            "CronJob",
                          ]
                      description: Types of workloads to match
                    containerNames:
                      type: array
                      items:
                        type: string
                      description: Container name patterns to match (supports wildcards)
                    podNameRegex:
                      type: string
                      description: Regular expression for pod names
                    qosClass:
                      type: string
                      enum: ["Guaranteed", "Burstable", "BestEffort"]
                      description: QoS class of pods to match
                actions:
                  type: object
                  description: Actions to apply when policy matches
                  properties:
                    skip:
                      type: boolean
                      description: Skip resizing for matching pods
                    cpuMultiplier:
                      type: number
                      minimum: 0.1
                      maximum: 10
                      description: Multiplier for CPU resources
                    memoryMultiplier:
                      type: number
                      minimum: 0.1
                      maximum: 10
                      description: Multiplier for memory resources
                    minCPU:
                      type: string
                      pattern: "^[0-9]+m?$"
                      description: Minimum CPU request (e.g., 100m, 1)
                    maxCPU:
                      type: string
                      pattern: "^[0-9]+m?$"
                      description: Maximum CPU limit (e.g., 4000m, 4)
                    minMemory:
                      type: string
                      pattern: "^[0-9]+(Mi|Gi)$"
                      description: Minimum memory request (e.g., 128Mi, 1Gi)
                    maxMemory:
                      type: string
                      pattern: "^[0-9]+(Mi|Gi)$"
                      description: Maximum memory limit (e.g., 8Gi, 16Gi)
                    setCPURequest:
                      type: string
                      pattern: "^[0-9]+m?$"
                      description: Fixed CPU request value
                    setCPULimit:
                      type: string
                      pattern: "^[0-9]+m?$"
                      description: Fixed CPU limit value
                    setMemoryRequest:
                      type: string
                      pattern: "^[0-9]+(Mi|Gi)$"
                      description: Fixed memory request value
                    setMemoryLimit:
                      type: string
                      pattern: "^[0-9]+(Mi|Gi)$"
                      description: Fixed memory limit value
                schedule:
                  type: object
                  description: Time-based policy activation
                  properties:
                    timeRanges:
                      type: array
                      items:
                        type: object
                        properties:
                          start:
                            type: string
                            pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
                            description: Start time (HH:MM)
                          end:
                            type: string
                            pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
                            description: End time (HH:MM)
                    daysOfWeek:
                      type: array
                      items:
                        type: string
                        enum:
                          [
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday",
                            "Sunday",
                          ]
                    timezone:
                      type: string
                      description: Timezone for schedule (e.g., America/New_York)
            status:
              type: object
              properties:
                phase:
                  type: string
                  enum: ["Active", "Inactive", "Error"]
                lastApplied:
                  type: string
                  format: date-time
                matchedPods:
                  type: integer
                message:
                  type: string
      subresources:
        status: {}
  scope: Cluster
  names:
    plural: rightsizerpolicies
    singular: rightsizerpolicy
    kind: RightSizerPolicy
    shortNames:
      - rsp

---
# CRD Definition for RightSizerConfig
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rightsizerconfigs.rightsizer.io
spec:
  group: rightsizer.io
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                global:
                  type: object
                  description: Global configuration settings
                  properties:
                    enabled:
                      type: boolean
                      default: true
                    dryRun:
                      type: boolean
                      default: false
                    resizeInterval:
                      type: string
                      default: "30s"
                    metricsProvider:
                      type: string
                      enum: ["kubernetes", "prometheus"]
                      default: "kubernetes"
                    prometheusUrl:
                      type: string
                    logLevel:
                      type: string
                      enum: ["debug", "info", "warn", "error"]
                      default: "info"
                defaults:
                  type: object
                  description: Default multipliers and boundaries
                  properties:
                    cpuRequestMultiplier:
                      type: number
                      default: 1.2
                    memoryRequestMultiplier:
                      type: number
                      default: 1.2
                    cpuLimitMultiplier:
                      type: number
                      default: 2.0
                    memoryLimitMultiplier:
                      type: number
                      default: 2.0
                    maxCpuLimit:
                      type: string
                      default: "4000m"
                    maxMemoryLimit:
                      type: string
                      default: "8Gi"
                    minCpuRequest:
                      type: string
                      default: "10m"
                    minMemoryRequest:
                      type: string
                      default: "64Mi"
                features:
                  type: object
                  description: Feature flags
                  properties:
                    enableInPlaceResize:
                      type: boolean
                      default: true
                    policyBasedSizing:
                      type: boolean
                      default: true
                    historicalAnalysis:
                      type: boolean
                      default: true
                    admissionController:
                      type: boolean
                      default: false
                    auditLogging:
                      type: boolean
                      default: true
                safety:
                  type: object
                  description: Safety configuration
                  properties:
                    maxRetries:
                      type: integer
                      default: 3
                    retryInterval:
                      type: string
                      default: "5s"
                    safetyThreshold:
                      type: number
                      minimum: 0
                      maximum: 1
                      default: 0.5
                    historyDays:
                      type: integer
                      default: 7
                namespaceFilters:
                  type: object
                  properties:
                    include:
                      type: array
                      items:
                        type: string
                    exclude:
                      type: array
                      items:
                        type: string
            status:
              type: object
              properties:
                phase:
                  type: string
                observedGeneration:
                  type: integer
                lastReconciled:
                  type: string
                  format: date-time
      subresources:
        status: {}
  scope: Cluster
  names:
    plural: rightsizerconfigs
    singular: rightsizerconfig
    kind: RightSizerConfig
    shortNames:
      - rsc

---
# Global Configuration
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerConfig
metadata:
  name: right-sizer-config
spec:
  global:
    enabled: true
    dryRun: false
    resizeInterval: "30s"
    metricsProvider: "kubernetes"
    logLevel: "info"
  defaults:
    cpuRequestMultiplier: 1.2
    memoryRequestMultiplier: 1.2
    cpuLimitMultiplier: 2.0
    memoryLimitMultiplier: 2.0
    maxCpuLimit: "4000m"
    maxMemoryLimit: "8Gi"
    minCpuRequest: "10m"
    minMemoryRequest: "64Mi"
  features:
    enableInPlaceResize: true
    policyBasedSizing: true
    historicalAnalysis: true
    admissionController: false
    auditLogging: true
  safety:
    maxRetries: 3
    retryInterval: "5s"
    safetyThreshold: 0.5
    historyDays: 7
  namespaceFilters:
    include:
      - default
      - production
      - staging
    exclude:
      - kube-system
      - kube-public
      - kube-node-lease

---
# Policy 1: Skip system and infrastructure pods
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: skip-system-pods
spec:
  priority: 200
  enabled: true
  description: Skip right-sizing for critical system pods
  selectors:
    namespaces:
      - kube-system
      - kube-public
      - kube-node-lease
      - cert-manager
      - ingress-nginx
      - monitoring
      - logging
    labels:
      app.kubernetes.io/component: system
  actions:
    skip: true

---
# Policy 2: High priority production workloads
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: high-priority-production
spec:
  priority: 150
  enabled: true
  description: Enhanced resource allocation for high priority production workloads
  selectors:
    namespaces:
      - production
      - prod
    labels:
      priority: high
      environment: production
    annotations:
      rightsizer.io/priority: high
  actions:
    cpuMultiplier: 1.8
    memoryMultiplier: 1.6
    minCPU: "100m"
    minMemory: "256Mi"
    maxCPU: "8000m"
    maxMemory: "16Gi"

---
# Policy 3: Database workloads
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: database-workloads
spec:
  priority: 120
  enabled: true
  description: Special handling for database containers requiring more memory
  selectors:
    labels:
      app.kubernetes.io/component: database
    containerNames:
      - "*db*"
      - "*database*"
      - "*postgres*"
      - "*mysql*"
      - "*mongo*"
    qosClass: Guaranteed
  actions:
    cpuMultiplier: 1.3
    memoryMultiplier: 2.2
    minMemory: "1Gi"
    maxMemory: "32Gi"
    setCPULimit: "4000m"

---
# Policy 4: Web frontend applications
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: web-frontend
spec:
  priority: 100
  enabled: true
  description: Optimized settings for web frontend applications
  selectors:
    labels:
      app.kubernetes.io/component: frontend
      tier: web
    workloadTypes:
      - Deployment
  actions:
    cpuMultiplier: 1.1
    memoryMultiplier: 1.2
    maxCPU: "2000m"
    maxMemory: "4Gi"
    setCPURequest: "50m"
    setMemoryRequest: "128Mi"

---
# Policy 5: Batch processing jobs
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: batch-jobs
spec:
  priority: 90
  enabled: true
  description: Resource limits for batch processing workloads
  selectors:
    workloadTypes:
      - Job
      - CronJob
    labels:
      app.kubernetes.io/component: worker
  actions:
    cpuMultiplier: 1.0
    memoryMultiplier: 1.3
    maxCPU: "4000m"
    maxMemory: "8Gi"
    minCPU: "100m"

---
# Policy 6: Machine learning workloads
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: ml-workloads
spec:
  priority: 110
  enabled: true
  description: Resource allocation for ML/AI workloads
  selectors:
    labels:
      workload-type: ml
      app.kubernetes.io/component: training
    annotations:
      rightsizer.io/workload-type: ml
  actions:
    cpuMultiplier: 2.0
    memoryMultiplier: 3.0
    minCPU: "500m"
    minMemory: "2Gi"
    setCPULimit: "16000m"
    setMemoryLimit: "64Gi"

---
# Policy 7: Development environments
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: development-conservative
spec:
  priority: 30
  enabled: true
  description: Conservative resource allocation for development environments
  selectors:
    namespaces:
      - development
      - dev
      - staging
      - test
    labels:
      environment: dev
  actions:
    cpuMultiplier: 1.0
    memoryMultiplier: 1.1
    maxCPU: "1000m"
    maxMemory: "2Gi"

---
# Policy 8: Microservices pattern
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: microservices-pattern
spec:
  priority: 80
  enabled: true
  description: Optimized settings for microservices following naming patterns
  selectors:
    podNameRegex: "^(api|service|svc)-.*"
    workloadTypes:
      - Deployment
    labels:
      architecture: microservices
  actions:
    cpuMultiplier: 1.15
    memoryMultiplier: 1.25
    minCPU: "20m"
    minMemory: "64Mi"
    maxCPU: "2000m"
    maxMemory: "4Gi"

---
# Policy 9: Stateful workloads
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: stateful-workloads
spec:
  priority: 95
  enabled: true
  description: Enhanced resource allocation for stateful workloads
  selectors:
    workloadTypes:
      - StatefulSet
    labels:
      app.kubernetes.io/component: stateful
  actions:
    cpuMultiplier: 1.4
    memoryMultiplier: 1.8
    minMemory: "512Mi"
    maxMemory: "16Gi"

---
# Policy 10: Business hours scaling
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: business-hours-scaling
spec:
  priority: 70
  enabled: true
  description: Higher resource allocation during business hours
  selectors:
    namespaces:
      - production
    labels:
      scaling-policy: business-hours
  schedule:
    timeRanges:
      - start: "08:00"
        end: "18:00"
    daysOfWeek:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
    timezone: "America/New_York"
  actions:
    cpuMultiplier: 1.5
    memoryMultiplier: 1.3

---
# Policy 11: Off-hours conservative scaling
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: off-hours-conservative
spec:
  priority: 65
  enabled: true
  description: Conservative resource allocation during off-hours
  selectors:
    namespaces:
      - production
    labels:
      scaling-policy: off-hours
  schedule:
    timeRanges:
      - start: "18:01"
        end: "07:59"
    timezone: "America/New_York"
  actions:
    cpuMultiplier: 0.8
    memoryMultiplier: 0.9
    maxCPU: "2000m"
    maxMemory: "4Gi"

---
# Policy 12: Memory-intensive applications
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: memory-intensive
spec:
  priority: 85
  enabled: true
  description: Special handling for memory-intensive applications
  selectors:
    labels:
      workload-profile: memory-intensive
      app.kubernetes.io/component: cache
    annotations:
      rightsizer.io/profile: memory-intensive
  actions:
    cpuMultiplier: 1.1
    memoryMultiplier: 2.5
    minMemory: "2Gi"
    maxMemory: "64Gi"

---
# Policy 13: CPU-intensive applications
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: cpu-intensive
spec:
  priority: 85
  enabled: true
  description: Enhanced CPU allocation for compute-intensive workloads
  selectors:
    labels:
      workload-profile: cpu-intensive
      app.kubernetes.io/component: compute
  actions:
    cpuMultiplier: 2.2
    memoryMultiplier: 1.2
    minCPU: "1000m"
    maxCPU: "16000m"

---
# Policy 14: Queue workers
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: queue-workers
spec:
  priority: 75
  enabled: true
  description: Optimized settings for background queue workers
  selectors:
    labels:
      app.kubernetes.io/component: worker
      queue-type: background
    containerNames:
      - "worker"
      - "*-worker"
  actions:
    cpuMultiplier: 1.2
    memoryMultiplier: 1.4
    minCPU: "50m"
    maxCPU: "4000m"

---
# Policy 15: Monitoring and observability
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: monitoring-workloads
spec:
  priority: 55
  enabled: true
  description: Special handling for monitoring and observability tools
  selectors:
    labels:
      app.kubernetes.io/component: monitoring
    namespaces:
      - monitoring
      - observability
  actions:
    cpuMultiplier: 1.3
    memoryMultiplier: 2.0
    minMemory: "1Gi"
    maxMemory: "32Gi"

---
# Policy 16: Sidecar containers
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: sidecar-containers
spec:
  priority: 25
  enabled: true
  description: Minimal resources for sidecar containers
  selectors:
    containerNames:
      - "*sidecar*"
      - "istio-proxy"
      - "envoy"
    labels:
      app.kubernetes.io/component: sidecar
  actions:
    cpuMultiplier: 0.8
    memoryMultiplier: 0.9
    maxCPU: "200m"
    maxMemory: "256Mi"
    setCPURequest: "10m"
    setMemoryRequest: "32Mi"

---
# Policy 17: Default fallback rule
apiVersion: rightsizer.io/v1alpha1
kind: RightSizerPolicy
metadata:
  name: default-scaling
spec:
  priority: 10
  enabled: true
  description: Default resource scaling for all other pods
  selectors: {} # Matches all pods not caught by other rules
  actions:
    cpuMultiplier: 1.2
    memoryMultiplier: 1.2
    minCPU: "10m"
    minMemory: "64Mi"
    maxCPU: "4000m"
    maxMemory: "8Gi"

---
# Example: Apply these resources
# kubectl apply -f policy-rules-example.yaml
#
# View policies:
# kubectl get rightsizerpolicies
# kubectl get rsp
#
# View configuration:
# kubectl get rightsizerconfig
# kubectl get rsc
#
# Describe a specific policy:
# kubectl describe rsp high-priority-production
