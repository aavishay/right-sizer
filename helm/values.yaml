# Default values for right-sizer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: aavishay/right-sizer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion (0.2.0)
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# Metrics configuration
metricsPort: 9090

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Dashboard integration settings (secure configuration)
dashboard:
  # Dashboard API URL
  url: ""

  # API Token configuration (secure)
  apiToken:
    # Create a new secret for the API token
    create: false
    # Provide the token value (will be stored in a Secret)
    # WARNING: Do not commit actual tokens to version control!
    # Use --set dashboard.apiToken.value=xxx or external secret management
    value: ""
    # Generate a random token (useful for initial setup)
    generateRandom: false
    # Use an existing secret
    existingSecret: ""
    # Key in the existing secret
    key: "api-token"
    # Additional annotations for the secret
    annotations: {}
      # external-secrets.io/secret-store-ref: "my-secret-store"

  # Cluster identification
  cluster:
    # Create a secret for cluster credentials
    secretCreate: false
    # Use an existing secret for cluster credentials
    existingSecret: ""
    # Cluster ID (unique identifier)
    id: ""
    # Cluster name (human-readable)
    name: ""
    # Keys in the existing secret
    idKey: "cluster-id"
    nameKey: "cluster-name"
    # Additional annotations for the cluster secret
    annotations: {}

# Global configuration
global:
  # Cluster name fallback (if not specified in dashboard.cluster)
  clusterName: ""

# RightSizerConfig CRD configuration
rightsizerConfig:
  # Create a default RightSizerConfig resource
  create: true

  # Core configuration
  enabled: true
  mode: "balanced" # adaptive, aggressive, balanced, conservative, custom
  dryRun: false

  # Resource defaults and sizing configuration
  resourceDefaults:
    cpu:
      minRequest: "10m" # millicores
      maxLimit: "4000m" # millicores
      requestAddition: 0 # millicores to add to calculated request
      limitAddition: 0 # millicores to add to calculated limit
    memory:
      minRequest: "64Mi" # MB
      maxLimit: "8192Mi" # MB
      requestAddition: 0 # MB to add to calculated request
      limitAddition: 0 # MB to add to calculated limit

  # Sizing strategy configuration
  sizingStrategy:
    algorithm: "percentile" # percentile, peak, average
    lookbackPeriod: "7d"
    percentile: 95

    # Scaling factors and multipliers
    scalingFactors:
      cpuRequestMultiplier: 1.2
      cpuLimitMultiplier: 2.0
      memoryRequestMultiplier: 1.2
      memoryLimitMultiplier: 2.0
      maxChangePercentage: 50
      minChangeThreshold: 10

    # Thresholds for scaling decisions
    thresholds:
      cpuScaleUpThreshold: 0.8 # 80% utilization triggers scale up
      cpuScaleDownThreshold: 0.3 # 30% utilization triggers scale down
      memoryScaleUpThreshold: 0.8 # 80% utilization triggers scale up
      memoryScaleDownThreshold: 0.3 # 30% utilization triggers scale down

  # Metrics buffering configuration for multi-cluster deployments
  metricsBuffer:
    # Enable local metrics buffering
    enabled: true

    # Buffer window configuration
    windowMinutes: 10 # Keep 10 minutes of metrics locally
    minWindowMinutes: 5 # Minimum buffer window
    maxWindowMinutes: 60 # Maximum buffer window

    # Buffer storage configuration
    storageType: "memory" # memory, disk, hybrid
    maxMemoryMB: 100 # Maximum memory for buffer (MB)
    diskPath: "/var/lib/right-sizer/buffer" # Path for disk buffer
    compressionEnabled: true # Enable compression for buffered data

    # Batch configuration
    batchSize: 1000 # Number of metrics per batch
    flushIntervalSeconds: 60 # How often to flush buffer
    maxBatchRetries: 3 # Max retries for failed batches
    retryDelaySeconds: 5 # Delay between retries

    # Aggregation settings
    enableAggregation: true # Aggregate metrics locally before sending
    aggregationIntervalSeconds: 30 # Aggregation interval
    aggregationTypes: # Types of aggregations to compute
      - min
      - max
      - avg
      - p50
      - p90
      - p95
      - p99

    # Dashboard connection (for multi-tenant setups)
    dashboard:
      enabled: false # Enable sending to centralized dashboard
      url: "" # Dashboard API URL
      apiToken: "" # DEPRECATED - use dashboard.apiToken configuration below
      tlsVerify: true # Verify TLS certificates
      timeoutSeconds: 30 # Request timeout

    # Data retention
    retentionOnErrorMinutes: 60 # Keep data longer if dashboard is unavailable
    purgeOldDataIntervalMinutes: 5 # How often to purge old data

    # Performance tuning
    workerThreads: 2 # Number of worker threads for processing
    compressionLevel: 6 # Compression level (1-9)

  # Multi-tenancy configuration
  multiTenancy:
    enabled: false # Enable multi-tenant features
    organizationId: "" # Organization identifier
    clusterId: "" # DEPRECATED - use dashboard.cluster configuration below
    clusterName: "" # DEPRECATED - use dashboard.cluster configuration below
    environment: "production" # Environment label (dev, staging, production)
    region: "" # Cloud region or datacenter
    labels: {} # Additional labels for cluster identification

  # Global constraints
  constraints:
    maxChangePercentage: 50
    minChangeThreshold: 5
    maxMemoryGB: 32
    maxCPUCores: 16
    cooldownPeriod: "5m"
    maxConcurrentResizes: 10
    respectPDB: true
    respectHPA: true
    respectVPA: true

  # Monitoring and metrics configuration
  monitoring:
    metricsProvider: "metrics-server" # metrics-server, prometheus, custom
    # prometheusURL: "http://prometheus:9090"
    # metricsServerEndpoint: "http://metrics-server:8080"
    scrapeInterval: "30s"
    retentionPeriod: "30d"
    aggregationMethod: "avg" # avg, max, min, percentile
    includeCustomMetrics: false

  # Observability configuration
  observability:
    enableMetricsExport: true
    metricsPort: 9090
    enableTracing: false
    # tracingEndpoint: "http://jaeger:4318"
    enableProfiling: false
    profilingPort: 6060

  # Security configuration
  security:
    enableAdmissionController: false
    admissionWebhookPort: 8443
    requireAnnotation: false
    annotationKey: "rightsizer.io/enable"
    enableMutatingWebhook: false
    enableValidatingWebhook: false
    tlsCertDir: "/tmp/certs"
    webhookTimeoutSeconds: 10

  # Operator configuration
  operator:
    leaderElection: true
    leaderElectionNamespace: "" # Uses release namespace if empty
    leaderElectionID: "right-sizer-leader"
    leaderElectionLeaseDuration: "15s"
    leaderElectionRenewDeadline: "10s"
    leaderElectionRetryPeriod: "2s"
    syncPeriod: "30s"
    maxConcurrentReconciles: 3
    workerThreads: 10
    qps: 20
    burst: 30
    healthProbePort: 8081
    readinessEndpoint: "/readyz"
    livenessEndpoint: "/healthz"

  # Operational configuration
  operationalConfig:
    resizeInterval: "5m"
    retryAttempts: 3
    retryInterval: "5s"
    batchSize: 3
    delayBetweenBatches: "5s"
    delayBetweenPods: "500ms"
    maxUpdatesPerRun: 50

  # Namespace configuration
  namespaceConfig:
    # Namespaces to include (empty means all)
    includeNamespaces: []
    # Example:
    # includeNamespaces:
    #   - "default"
    #   - "production"

    # Namespaces to exclude from right-sizing
    excludeNamespaces:
      - "kube-system"
      - "kube-public"
      - "kube-node-lease"
      - "cert-manager"
      - "ingress-nginx"
      - "istio-system"

    # System namespaces that should never be modified
    systemNamespaces:
      - "kube-system"
      - "kube-public"
      - "kube-node-lease"
      - "cert-manager"
      - "ingress-nginx"
      - "istio-system"

    # Select namespaces by labels
    namespaceLabels: {}
    # Example:
    # namespaceLabels:
    #   environment: "production"
    #   team: "platform"

  # Logging configuration
  logging:
    level: "info" # debug, info, warn, error
    format: "json" # json, text
    enableAudit: true

  # Notification configuration
  notifications:
    enabled: false

    # Slack notifications
    slack: {}
    # Example:
    # slack:
    #   webhookURL: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
    #   channel: "#right-sizer"
    #   username: "RightSizer"
    #   iconEmoji: ":robot:"
    #   notifyOnSuccess: false
    #   notifyOnFailure: true
    #   notifyOnDryRun: false

    # Email notifications
    email: {}
    # Example:
    # email:
    #   smtpHost: "smtp.gmail.com"
    #   smtpPort: 587
    #   smtpUsername: "notifications@example.com"
    #   smtpPasswordSecret: "smtp-password-secret"
    #   from: "rightsizer@example.com"
    #   to:
    #     - "ops-team@example.com"
    #     - "platform@example.com"
    #   subject: "RightSizer Alert"

    # Webhook notifications
    webhook: {}
    # Example:
    # webhook:
    #   url: "https://your-webhook.example.com/alerts"
    #   method: "POST"
    #   headers:
    #     Authorization: "Bearer YOUR_TOKEN"
    #     Content-Type: "application/json"
    #   retryCount: 3
    #   retryDelay: "5s"

  # Feature gates for experimental features
  featureGates:
    updateResizePolicy: false # Update resize policy for in-place pod resizing (K8s 1.33+)
    enablePredictiveScaling: false # ML-based predictive scaling
    enableCostOptimization: false # Cost-aware resource optimization
    enableMultiCluster: false # Multi-cluster support
    enableAutoLearning: false # Auto-learn optimal resource patterns
    enableWorkloadProfiling: false # Profile workload patterns
    enableAdvancedScheduling: false # Advanced scheduling optimizations

# AIOps subsystem configuration (new)
aiops:
  enabled: true
  engine:
    dispatchInterval: 5s
  analyzers:
    memoryLeak:
      enabled: true
      # Minimum RSS threshold to engage leak logic (internal bytes converted at runtime)
      minRSSThreshold: 64MiB
      windowSize: 12
      r2Threshold: 0.55
      minSlopeMBPerMinute: 0.2
  narrative:
    deterministic: true
    llm:
      enabled: false
      model: ""
      apiURL: ""
      # apiKey is provided via secret/env; not stored here
  incidentStore:
    maxIncidents: 500
    retention: 24h
    pruneInterval: 2m

# Runtime capability / version policy
capabilities:
  enforceMinimumMinor: 33 # Minimum supported Kubernetes minor (1.33+)
  failOnUnsupported: false # If true, operator exits when cluster < minimum

# Prometheus Operator ServiceMonitor configuration (optional)
serviceMonitor:
  enabled: false # Set true to create a ServiceMonitor
  interval: 30s # Scrape interval
  scrapeTimeout: 10s # Scrape timeout
  path: /metrics # Metrics endpoint path
  scheme: http # http or https
  namespace: "" # Override namespace for ServiceMonitor (defaults to release namespace)
  labels: {} # Extra labels to merge into the ServiceMonitor metadata
  honorLabels: false
  metricRelabelings: [] # List of metricRelabelConfigs
  relabelings: [] # List of relabelConfigs
