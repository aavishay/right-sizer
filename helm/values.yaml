# Default values for right-sizer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Deployment configuration
replicaCount: 1

image:
  repository: aavishay/right-sizer
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "right-sizer"

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  fsGroup: 65532

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

# Service configuration
service:
  type: ClusterIP
  port: 9090
  annotations: {}

# Resources for the right-sizer operator pod itself
resources:
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Autoscaling configuration for the operator
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node selector for operator pod placement
nodeSelector: {}

# Tolerations for operator pod assignment
tolerations: []

# Affinity rules for operator pod assignment
affinity: {}

# RBAC configuration
rbac:
  # Create RBAC resources
  create: true

# Webhook configuration
webhook:
  # Enable webhook server
  enabled: true
  # Certificate configuration
  certManager:
    enabled: false
    issuerRef:
      name: ""
      kind: ""

# Monitoring configuration
monitoring:
  # Create ServiceMonitor for Prometheus Operator
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

# CRD installation
crds:
  # Install CRDs as part of the Helm release
  install: true
  # Keep CRDs on chart uninstall
  keep: true

# Default RightSizerConfig CRD instance
# Set to true to create a default configuration
createDefaultConfig: true

# Default configuration values for the RightSizerConfig CRD
# These will only be used if createDefaultConfig is true
defaultConfig:
  name: "default"
  enabled: true
  mode: "balanced"
  resizeInterval: "30s"
  dryRun: false

  # Default resource strategy
  resourceStrategy:
    cpu:
      requestMultiplier: 1.2
      requestAddition: 0
      limitMultiplier: 2.0
      limitAddition: 0
      minRequest: 10
      maxLimit: 4000
      scaleUpThreshold: 0.8
      scaleDownThreshold: 0.3
    memory:
      requestMultiplier: 1.2
      requestAddition: 0
      limitMultiplier: 2.0
      limitAddition: 0
      minRequest: 64
      maxLimit: 8192
      scaleUpThreshold: 0.8
      scaleDownThreshold: 0.3

  # Global constraints
  constraints:
    maxChangePercentage: 50
    minChangeThreshold: 5
    cooldownPeriod: "5m"
    maxConcurrentResizes: 10
    maxRestartsPerHour: 3
    respectPDB: true
    respectHPA: true
    respectVPA: true

  # Metrics configuration
  metrics:
    provider: "metrics-server"
    prometheusEndpoint: ""
    scrapeInterval: "30s"
    retentionPeriod: "7d"

  # Observability configuration
  observability:
    logLevel: "info"
    logFormat: "json"
    enableAuditLog: true
    auditLogPath: "/var/log/right-sizer/audit.log"
    enableMetricsExport: true
    metricsPort: 9090
    enableTracing: false
    tracingEndpoint: ""
    enableEvents: true

  # Security configuration
  security:
    enableAdmissionController: false
    admissionWebhookPort: 8443
    requireAnnotation: false
    annotationKey: "rightsizer.io/enable"
    enableMutatingWebhook: false
    enableValidatingWebhook: true

  # Operator configuration
  operator:
    leaderElection: false
    leaderElectionNamespace: ""
    leaderElectionID: "right-sizer-leader"
    maxRetries: 3
    retryInterval: "5s"
    enableCircuitBreaker: true
    circuitBreakerThreshold: 5
    reconcileInterval: "1m"
    workerThreads: 10

  # Namespace configuration
  namespaces:
    # Include specific namespaces (empty means all)
    include: []
    # Exclude specific namespaces
    exclude:
      - kube-system
      - kube-public
      - kube-node-lease
    # System namespaces to always exclude
    systemNamespaces:
      - kube-system
      - kube-public
      - kube-node-lease
      - right-sizer-system

  # Feature gates
  featureGates:
    EnableInPlaceResize: false
    EnablePredictiveScaling: false
    EnableCostOptimization: false

# Example RightSizerPolicy CRDs
# Set to true to create example policies
createExamplePolicies: false

# Example policies configuration
examplePolicies:
  - name: "aggressive-policy"
    enabled: false
    priority: 100
    mode: "aggressive"
    targetRef:
      kind: "Deployment"
      namespaces: ["default"]
      labelSelector:
        matchLabels:
          environment: "development"
    resourceStrategy:
      cpu:
        requestMultiplier: 1.1
        limitMultiplier: 1.5
        targetUtilization: 80
      memory:
        requestMultiplier: 1.1
        limitMultiplier: 1.5
        targetUtilization: 85
    schedule:
      interval: "5m"
    constraints:
      maxChangePercentage: 30
      cooldownPeriod: "10m"
      respectPDB: true
      respectHPA: true

  - name: "conservative-policy"
    enabled: false
    priority: 50
    mode: "conservative"
    targetRef:
      kind: "StatefulSet"
      namespaces: ["production"]
      labelSelector:
        matchLabels:
          tier: "database"
    resourceStrategy:
      cpu:
        requestMultiplier: 1.5
        limitMultiplier: 2.5
        targetUtilization: 60
      memory:
        requestMultiplier: 1.5
        limitMultiplier: 2.0
        targetUtilization: 70
    schedule:
      interval: "30m"
    constraints:
      maxChangePercentage: 20
      cooldownPeriod: "30m"
      respectPDB: true
      respectHPA: true
      maxRestartsPerHour: 1

  - name: "business-hours-policy"
    enabled: false
    priority: 200
    mode: "custom"
    targetRef:
      kind: "Deployment"
      namespaces: ["default"]
      annotationSelector:
        rightsizer.io/business-hours: "true"
    resourceStrategy:
      cpu:
        requestMultiplier: 1.3
        limitMultiplier: 2.0
      memory:
        requestMultiplier: 1.3
        limitMultiplier: 2.0
    schedule:
      timeWindows:
        - start: "08:00"
          end: "18:00"
          daysOfWeek: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]
          timezone: "America/New_York"
    constraints:
      maxChangePercentage: 25
      cooldownPeriod: "15m"
