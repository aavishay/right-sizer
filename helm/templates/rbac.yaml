---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "right-sizer.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "right-sizer.labels" . | nindent 4 }}
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "right-sizer.fullname" . }}
  labels:
    {{- include "right-sizer.labels" . | nindent 4 }}
rules:
  # Custom Resource Definitions
  - apiGroups: ["rightsizer.io"]
    resources: ["rightsizerpolicies", "rightsizerconfigs"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rightsizer.io"]
    resources: ["rightsizerpolicies/status", "rightsizerconfigs/status"]
    verbs: ["get", "update", "patch"]
  - apiGroups: ["rightsizer.io"]
    resources: ["rightsizerpolicies/finalizers", "rightsizerconfigs/finalizers"]
    verbs: ["update"]

  # Core pod operations
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch", "patch", "update"]

  # Pod status for monitoring
  - apiGroups: [""]
    resources: ["pods/status"]
    verbs: ["get", "list", "watch", "patch", "update"]

  # In-place resize subresource (Kubernetes 1.27+)
  - apiGroups: [""]
    resources: ["pods/resize"]
    verbs: ["patch", "update"]

  # Node information for capacity validation and resource availability
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]

  # Node status for resource capacity checking
  - apiGroups: [""]
    resources: ["nodes/status"]
    verbs: ["get", "list", "watch"]

  # Metrics API for resource usage data (v1 - current version)
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]

  # Metrics API v1beta1 (for backward compatibility)
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]

  # PodMetrics and NodeMetrics resources explicitly
  - apiGroups: ["metrics.k8s.io"]
    resources: ["podmetrics", "nodemetrics"]
    verbs: ["get", "list", "watch"]

  # Custom and external metrics (if available)
  - apiGroups: ["custom.metrics.k8s.io", "external.metrics.k8s.io"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]

  # Workload controllers management
  - apiGroups: ["apps"]
    resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
    verbs: ["get", "list", "watch", "patch", "update"]

  # Workload controller status
  - apiGroups: ["apps"]
    resources: ["deployments/status", "statefulsets/status", "daemonsets/status", "replicasets/status"]
    verbs: ["get", "list", "watch"]

  # Scale subresource for workload controllers
  - apiGroups: ["apps"]
    resources: ["deployments/scale", "statefulsets/scale", "replicasets/scale"]
    verbs: ["get", "patch", "update"]

  # Batch jobs
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "watch"]

  # Events for logging resize operations
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]

  # ConfigMaps for configuration
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]

  # Secrets for sensitive configuration
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]

  # Namespaces for multi-namespace support
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]

  # HorizontalPodAutoscalers to avoid conflicts
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch"]

  # VerticalPodAutoscalers to avoid conflicts (if VPA is installed)
  - apiGroups: ["autoscaling.k8s.io"]
    resources: ["verticalpodautoscalers"]
    verbs: ["get", "list", "watch"]

  # PodDisruptionBudgets for safe operations
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch"]

  # ResourceQuotas to respect namespace limits
  - apiGroups: [""]
    resources: ["resourcequotas"]
    verbs: ["get", "list", "watch"]

  # LimitRanges to respect namespace constraints
  - apiGroups: [""]
    resources: ["limitranges"]
    verbs: ["get", "list", "watch"]

  # PersistentVolumeClaims for storage resource validation
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]

  # PersistentVolumes for cluster-wide storage information
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch"]

  # StorageClasses for storage provisioning information
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]

  # PriorityClasses for pod scheduling priority information
  - apiGroups: ["scheduling.k8s.io"]
    resources: ["priorityclasses"]
    verbs: ["get", "list", "watch"]

  # NetworkPolicies for network segmentation validation
  - apiGroups: ["networking.k8s.io"]
    resources: ["networkpolicies"]
    verbs: ["get", "list", "watch"]

  # Services for admission webhook support
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]

  # Endpoints for service discovery
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch"]

  # Admission controller webhooks (if enabled)
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "right-sizer.fullname" . }}
  labels:
    {{- include "right-sizer.labels" . | nindent 4 }}
roleRef:
  kind: ClusterRole
  name: {{ include "right-sizer.fullname" . }}
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ include "right-sizer.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}

---
# Role for namespace-specific operations in the operator's namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "right-sizer.fullname" . }}-namespace
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "right-sizer.labels" . | nindent 4 }}
rules:
  # ConfigMaps in operator namespace for leader election only
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Leases for leader election (controller-runtime)
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Secrets in operator namespace for TLS certificates
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

  # Events in operator namespace
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "patch", "update"]

  # Pods in operator namespace for self-monitoring
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ include "right-sizer.fullname" . }}-namespace
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "right-sizer.labels" . | nindent 4 }}
roleRef:
  kind: Role
  name: {{ include "right-sizer.fullname" . }}-namespace
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: {{ include "right-sizer.serviceAccountName" . }}
    namespace: {{ .Release.Namespace }}
