# Copyright (C) 2024 right-sizer contributors
# SPDX-License-Identifier: AGPL-3.0-or-later

# Alternative Dockerfile using Alpine Linux
# Use this when gcr.io or Docker Hub are experiencing issues

# Build stage
FROM --platform=$BUILDPLATFORM golang:1.24-alpine AS builder

# Build arguments for cross-compilation
ARG TARGETOS
ARG TARGETARCH
ARG VERSION=dev
ARG BUILD_DATE
ARG GIT_COMMIT

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

WORKDIR /build

# Copy go mod files first for better caching
COPY go/go.mod go/go.sum ./

# Download dependencies - this layer is cached as long as go.mod/go.sum don't change
RUN --mount=type=cache,target=/go/pkg/mod \
  go mod download && \
  go mod verify

# Copy source code
COPY go/ .

# Build the binary with caching
RUN --mount=type=cache,target=/go/pkg/mod \
  --mount=type=cache,target=/root/.cache/go-build \
  CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH:-amd64} \
  go build -a -installsuffix cgo \
  -ldflags="-w -s -X main.Version=${VERSION} -X main.BuildDate=${BUILD_DATE} -X main.GitCommit=${GIT_COMMIT}" \
  -o right-sizer main.go && \
  chmod +x right-sizer

# Final stage - using Alpine for reliability
FROM alpine:3.19

# Labels for OCI compliance
LABEL org.opencontainers.image.title="Right-Sizer" \
  org.opencontainers.image.description="Kubernetes operator for automatic pod resource right-sizing" \
  org.opencontainers.image.vendor="Right-Sizer Contributors" \
  org.opencontainers.image.licenses="AGPL-3.0-or-later" \
  org.opencontainers.image.version="${VERSION}" \
  org.opencontainers.image.revision="${GIT_COMMIT}" \
  org.opencontainers.image.created="${BUILD_DATE}"

# Install ca-certificates for HTTPS communication
RUN apk --no-cache add ca-certificates && \
  adduser -D -u 65532 -g nonroot nonroot && \
  mkdir -p /app && \
  chown -R nonroot:nonroot /app

# Copy the binary from builder
COPY --from=builder --chown=nonroot:nonroot /build/right-sizer /app/right-sizer

# Use nonroot user
USER nonroot:nonroot

WORKDIR /app

# Expose metrics and health check port
EXPOSE 8081

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD ["/app/right-sizer", "--health-check"]

# Run the binary
ENTRYPOINT ["/app/right-sizer"]
